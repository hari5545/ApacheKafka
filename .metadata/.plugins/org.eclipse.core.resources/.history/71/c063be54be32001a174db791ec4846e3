package com.example.demo.resources;

import javax.websocket.server.PathParam;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.example.demo.dto.UserDto;
import com.example.demo.response.UserResponse;
import com.example.demo.service.UserService;

@RestController
@RequestMapping("/rest")
public class UserResources {
	@Autowired
	private UserService userService;

	@PostMapping(path ="/save",consumes = MediaType.APPLICATION_JSON_VALUE)
	public ResponseEntity<UserResponse> saveUser(@RequestBody UserDto userDto){

		boolean falg=userService.saveUser(userDto);
		if(falg) {
			return ResponseEntity.status(HttpStatus.OK).body(new UserResponse(200,"your data saved sucessfully", userDto));
		}
		return ResponseEntity.status(HttpStatus.NOT_FOUND).body(new UserResponse(404,"your data is not stored in db", userDto)); 
	}
    @GetMapping(path ="/getUser/{id}",produces = {MediaType.APPLICATION_JSON_VALUE,MediaType.APPLICATION_XML_VALUE})
	public ResponseEntity<UserResponse> getUser(@PathParam("id") int id){
		UserDto userDto=userService.getUser(id);
		return null;
	}
	
	
}
